import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:week9_bloc/routes/home_bloc/home_bloc.dart';

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (context) => HomeBloc()..add(const HomeStarting()),
      child: BlocBuilder<HomeBloc, HomeState>(
        builder: (context, state) {
          if(state is HomeLoad) {
            return Scaffold(
              backgroundColor: state.isDarkMode ? Colors.black:Colors.white,
              appBar: AppBar(
                title: Text(widget.title),
                backgroundColor: state.isDarkMode ? Colors.blueGrey:Colors.blue,
                foregroundColor: state.isDarkMode ? Colors.black:Colors.white,
              ),
              body: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    Text(
                      'You have pushed the button this many times:',
                      style: TextStyle(
                        color: state.isDarkMode ? Colors.white:Colors.black,
                      ),
                    ),
                    Text(
                      '${state.counter}',
                      style: TextStyle(
                        fontSize: Theme.of(context).textTheme.headline4!.fontSize,
                        fontWeight: Theme.of(context).textTheme.headline4!.fontWeight,
                        color: state.isDarkMode ? Colors.white:Colors.black,
                      ),
                    ),
                    OutlinedButton(
                      onPressed: () {
                        BlocProvider.of<HomeBloc>(context).add(const HomeToggleButtonTapEvent());
                      },
                      child: const Text('Toggle dark mode'),),
                  ],
                ),
              ),
              floatingActionButton: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  FloatingActionButton(
                    onPressed: () {
                      BlocProvider.of<HomeBloc>(context).add(const HomeIncrementButtonTapEvent());
                    },
                    tooltip: 'Increment',
                    child: const Icon(Icons.add),
                  ),
                  const SizedBox(width:16),
                  FloatingActionButton(
                    onPressed: () {
                      BlocProvider.of<HomeBloc>(context).add(const HomeDecrementButtonTapEvent());
                    },
                    tooltip: 'Decrement',
                    child: const Icon(Icons.remove),
                  ),
                ],
              ),
            );
          }
          else {
            return Container();
          }
        }
      )
    );
  }
}


/*
Scaffold(
        backgroundColor: _isDarkMode ? Colors.black:Colors.white,
        appBar: AppBar(
          title: Text(widget.title),
          backgroundColor: _isDarkMode ? Colors.blueGrey:Colors.blue,
          foregroundColor: _isDarkMode ? Colors.black:Colors.white,
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(
                'You have pushed the button this many times:',
                style: TextStyle(
                  color: _isDarkMode ? Colors.white:Colors.black,
                ),
              ),
              Text(
                '$_counter',
                style: TextStyle(
                  fontSize: Theme.of(context).textTheme.headline4!.fontSize,
                  fontWeight: Theme.of(context).textTheme.headline4!.fontWeight,
                  color: _isDarkMode ? Colors.white:Colors.black,
                ),
              ),
              OutlinedButton(onPressed: _toggleDarkMode, child: Text('Toggle dark mode'))
            ],
          ),
        ),
        floatingActionButton: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            FloatingActionButton(
              onPressed: _incrementCounter,
              tooltip: 'Increment',
              child: const Icon(Icons.add),
            ),
            SizedBox(width:16),
            FloatingActionButton(
              onPressed: _decrementCounter,
              tooltip: 'Decrement',
              child: const Icon(Icons.remove),
            ),
          ],
        ),
      ),
 */