N = 22365785976614402332397512075124630827034962474834967508376992591878950349761466248996813628790324021741967645036142969442187151184395770097021823575949844361483331809293176534721694071334635996827951807532916795873629655454372863524613892925120878044667556713089187256277620400880942674492154919463659077088656955568365073946801041136455049154254694093386688718461966571180917691178001778881641370178356291899508110775449397873342307750859548327215761131604445299914396581941939357225594068024701563019774466034568844933299858477997754435831659757699431498632233228458041004651360032989248646612270310837431642234085323728177484894131361583681425555600156607217562397349329759129433534908756960805661036304391089345834509233838154349022133477003266336188367153439809888243394989544021054933138433327777476435190529104778129976652617046362887677861895816432682335827401878705944583782205741084481506390559086053735656140311253871289251353329169597363008994798852788633399111345050043699878172663514940100063654061453571115942641082817941575982943955570402403753758191438493616361452856840835486794570579705182218479249220132822428778059375078515905168433395933753278424300031706960688760687974376182140330967708327782851494424305411900910050471219968859397556822151330672315688400023275713385475636673375705418460899832831371793346707182198279244735326858616427948735041188325318283440302015774999829152258322963280493356950987282709489501694094388641232109406904291206718465429145244727160712334951148817109453889551067078695519930282020132174315707008087811410286418367002171219543528519457146211423711288808552599240627367625161851031476295911309840343787587200005529804876404288936962430037222588451493743068203434317795857684578223380732309464862655712412606898281225998993015418109727694593769147333845884375456846565153850875807335847519323533
C = 10996907317744048201180239191184801878870026359954251163808786991823988392040721694956774540613511870672915186967674497345695382645430111824083800355570536408550748237322495556640595897950904266978255920300494206063326443644038077060867859678853573135463689576016437189518186799433888575401030210875676845244656583911134078393876421877639911657047543070395464987842170462799343767525393215191609774073190285806734017390270810257697704746005511384590358282243168705497528675364827201498077988713907302696070779021284913585400756722751893643306497629378643206323310558189248071831717808359955530448986481886749316175356424375727873597173466277727860357595136
e = 2**4 + 1

# M**e = C mod N
# e = 17
# C = 2^2176  = 2^(128*17)
# Len(M) = 289
# Len(N) = 6144

C_copy = C

print(N.bit_length())
print(C.bit_length())
two_count = 0
while C % 2 == 0:
    C = C // 2
    two_count += 1


print("C = 2^{} * {}".format(two_count, C))
original_two_pow = two_count // e
print("original_two_pow = {}".format(original_two_pow))
m = pow(2, original_two_pow)
print("m = {}".format(bin(m)[2:]))