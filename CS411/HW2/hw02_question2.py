from hw2_helper import *
from client import *
from myntl import *
pair = getQ2()
e = pair[0]
c = pair[1]

p = 163812632438116402334651955238877888051471698595800699322979615035703105353498598900017754479082745390305183480326386193928762023006697325502630355995540302095536983747674239699082775937971908945314983176639634719523082664655125286220339981282043117576435108592265744474672826334454420325847233209118053745479
q = 167991311406281829893277907517380926743297770437237817698088843729837413680407121035993724942424328049100226903066919418963576739130754375674323262394889417412537943169688299724092631996519692955388293697048331540030669504591419100438660952486903606581569836090930608369486871356825028654569386086674053846173

n = p*q

phi_n =  (q-1)*(p-1)  # n*(1-1/p)*(1-1/q)

d = egcd(e, phi_n)[1] % phi_n
k = bin(d)[2:]


# right to left binary exponentiation
res = 1
for i in range(len(k)):
    res = (res*res) % n
    if k[i] == '1':
        res = (res*c) % n
res = res % n

ans = res.to_bytes((res.bit_length() + 1) // 8, byteorder='big')
ans = ans.decode("utf-8")
print("Q2: " + ans)
checkQ2(ans)
